---
import BannerCarousel from "./bannerCarousel.jsx";
import ButtonSlide from "../ui/buttons/ButtonSlide.tsx";
import AddToCartButton from "@/components/cart/AddToCartButton";
const { product, recommendations } = Astro.props;

// const images = details[detail as keyof typeof details].images
---

<section
    class="font-san w-full sm:h-screen h-full pt-20 flex sm:flex-row flex-col sm:gap-[2px] gap-0 items-center justify-center  sm:px-0 px-[5px]"
>
    <BannerCarousel images={product.images.nodes} client:load />
    <div class="sm:p-10 p-5 gap-10 flex flex-col bg-primary-bright rounded-[4px] h-full sm:w-[40%] w-full">
        <h1 class="sm:text-d-title-1 text-d-title-2 text-primary-olive">{product.title}</h1>
        <div class="flex flex-col gap-6">
            <p class="sm:text-d-primary text-d-secondary text-primary-granite">
                {product.description}
            </p>
            <div
                class="flex flex-row gap-4 items-center p-3 bg-[#E2E2E2] rounded-3xl"
            >
                <img
                    src="/images/products/warning.png"
                    alt="Icon"
                    class="size-6 object-cover"
                />
                <p class="text-d-secondary text-primary-granite">
                    Always perform a patch test before using any new hair care
                    product to ensure you do not have any adverse reactions.
                </p>
            </div>
        </div>
        <div class="flex flex-col gap-6">
            <!-- <div class="flex flex-col gap-4">
                <h3 class="text-d-products text-primary-granite">
                    Choose Variant
                </h3>
                <div class="flex flex-row gap-6">
                    {
                        product.variants.map((variant: { name: string }) => (
                            <button class="border border-primary-granite text-d-primary text-primary-granite py-4 px-6 rounded-full leading-none">
                                {variant.name}
                            </button>
                        ))
                    }
                </div>
            </div> -->
            <span class="text-d-title-2 text-primary-olive"
                >${product.variants.nodes[0].price.amount}</span
            >
            {product?.variants?.nodes?.[0] && (
                <AddToCartButton
                    client:load
                    variantId={product.variants.nodes[0].id}
                    variantQuantityAvailable={product.variants.nodes[0].quantityAvailable || 0}
                    variantAvailableForSale={product.variants.nodes[0].availableForSale}
                />
            )}
        </div>
        <div class="flex flex-col gap-4 p-3 bg-primary-lotion rounded-3xl">
            <h3 class="text-d-products text-primary-granite">Goes well with</h3>
            {Array.isArray(recommendations) && recommendations.length > 0 ? (
                <div class="flex flex-row gap-6">
                    {
                        recommendations.map((rec: any) => {
                            const imageUrl = rec?.featuredImage?.url || rec?.images?.nodes?.[0]?.url || "/images/placeholder.png";
                            const altText = rec?.featuredImage?.altText || rec?.title || "Recommended product";
                            const title = rec?.title || "";
                            const price = rec?.variants?.nodes?.[0]?.price?.amount || "";
                            const handle = rec?.handle || "#";
                            return (
                                <div class="flex flex-row gap-4 items-center justify-between w-full">
                                    <div class="flex flex-row gap-4 items-center w-full">
                                        <img src={imageUrl} alt={altText} class="size-16 object-cover" />
                                        <div class="flex flex-col gap-2">
                                            <h4 class="text-d-products text-primary-granite">{title}</h4>
                                            {price && (
                                                <span class="text-d-secondary text-primary-granite">${price}</span>
                                            )}
                                        </div>
                                    </div>
                                    {rec?.variants?.nodes?.[0] && (
                                        <AddToCartButton
                                            client:load
                                            variantId={rec.variants.nodes[0].id}
                                            variantQuantityAvailable={rec.variants.nodes[0].quantityAvailable || 0}
                                            variantAvailableForSale={rec.variants.nodes[0].availableForSale}
                                            buttonText="ADD"
                                        />
                                    )}
                                </div>
                            );
                        })
                    }
                </div>
            ) : (
                <div class="text-d-secondary text-primary-granite">No related products</div>
            )}
        </div>
    </div>
</section>
