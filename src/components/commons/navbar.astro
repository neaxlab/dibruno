---
const currentPath = Astro.url.pathname;
import CartIcon from '../CartIcon.tsx';

const navigationItems = [
  { href: '/shop', label: 'SHOP' },
  { href: '/about', label: 'ABOUT' },
  { href: '/ingredients', label: 'OUR INGREDIENTS' },
  { href: '/testimonials', label: 'TESTIMONIALS' },
  { href: '/faqs', label: 'FAQS' },
  { href: '/learn', label: 'LEARN' }
];

const isHome = currentPath === '/' || currentPath === '/index';
const textColor = isHome ? 'text-primary-lotion' : 'text-primary-olive';
const bgColor = isHome ? 'bg-primary-lotion' : 'bg-primary-olive';
const logoSrc = isHome ? '/images/home/logo-white.svg' : '/images/home/logo-olive.svg';

---

<header 
  id="navbar" 
  class={`fixed top-0 left-0 right-0 z-50 p-2 transition-all duration-300 ease-in-out z-50 ${textColor}`}
>
  <div class={`w-full h-fit flex flex-row justify-between items-center max-w-screen-2xl mx-auto p-5 text-d-nav ${textColor}`}>
    <!-- Logo -->
    <a href="/" class="flex-shrink-0">
      <img 
        src={logoSrc}
        alt="Logo" 
        class="w-[187px] h-[31px] transition-all duration-300"
        loading="eager"
      />
    </a>

    <!-- Navigation Links -->
    <nav class="flex flex-row gap-10" role="navigation" aria-label="Main navigation">
      {navigationItems.map(({ href, label }) => (
        <a 
          href={href} 
          class={`nav-link group relative transition-colors duration-300 ${currentPath === href ? 'active' : ''}`}
          aria-current={currentPath === href ? 'page' : undefined}
        >
          <span class="flex items-center gap-2">
            <span 
              class={`bullet w-0 h-0 rounded-full transition-all duration-300 group-hover:w-[6px] group-hover:h-[6px] group-[.active]:w-[6px] group-[.active]:h-[6px] ${bgColor}`}
              aria-hidden="true"
            ></span>
            <span>{label}</span>
          </span>
          <div 
            class={`absolute bottom-0 left-0 w-full h-0.5 opacity-0 transition-opacity duration-300 group-hover:opacity-100 group-[.active]:opacity-100 ${bgColor}`}
            aria-hidden="true"
          ></div>
        </a>
      ))}
    </nav>

    <!-- Right Side Actions -->
    <div class="flex flex-row gap-10">
      <button 
        class="transition-colors duration-300 hover:opacity-70"
        aria-label="Search"
      >
        SEARCH
      </button>
      <CartIcon client:load />
    </div>
  </div>
</header>

<script>
  // Variables globales para optimización
  let lastScrollY = window.scrollY;
  let ticking = false;
  let navLinks: NodeListOf<HTMLAnchorElement> | null = null;

  // Función optimizada para actualizar el navbar
  function updateNavbar() {
    const navbar = document.getElementById('navbar');
    if (!navbar) return;
    
    const currentScrollY = window.scrollY;
    const shouldHide = currentScrollY > lastScrollY && currentScrollY > 100;
    
    navbar.style.transform = shouldHide ? 'translateY(-100%)' : 'translateY(0)';
    lastScrollY = currentScrollY;
    ticking = false;
  }

  function onScroll() {
    if (!ticking) {
      requestAnimationFrame(updateNavbar);
      ticking = true;
    }
  }

  function handleNavClick(event: Event) {
    const target = event.currentTarget as HTMLAnchorElement;
    if (!target) return;

    navLinks?.forEach(link => link.classList.remove('active'));
    
    target.classList.add('active');
  }

  function initNavbar() {
    navLinks = document.querySelectorAll('.nav-link');
    
    navLinks.forEach(link => {
      link.addEventListener('click', handleNavClick, { passive: true });
    });

    window.addEventListener('scroll', onScroll, { passive: true });
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initNavbar);
  } else {
    initNavbar();
  }
</script>

<style>
  .nav-link {
    @apply relative inline-block;
  }

  .nav-link.active {
    @apply font-semibold;
  }

  .nav-link .bullet {
    @apply transform-gpu;
  }

  .nav-link:focus-visible {
    @apply outline-2 outline-offset-2 outline-primary-lotion;
  }

  @media (max-width: 768px) {
    .nav-link {
      @apply text-sm;
    }
  }
</style>